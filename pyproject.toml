[tool.pytest.ini_options]
minversion = "6.0"
testpaths = [
    "tests",
    "web/backend/tests_backend",
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = """
    -ra
    --strict-markers
    --tb=short
    --cov=nanodlna
    --cov=web.backend
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=0
    --maxfail=1
    --ff
    --durations=10
"""
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "e2e: End-to-end tests",
    "slow: Slow running tests",
    "network: Tests requiring network",
    "db: Database tests",
    "live: Live API tests",
    "asyncio: Async tests",
]
timeout = 300
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.pytest-watch]
ignore_patterns = [
    "*.pyc",
    "__pycache__",
    ".git",
    ".pytest_cache",
    "htmlcov",
    "node_modules",
    "venv",
    "nanodlna_venv",
]
clear = true
wait = 0.5

[tool.coverage.run]
source = ["nanodlna", "web/backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/nanodlna_venv/*",
    "*/migrations/*",
    "*/node_modules/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "except ImportError:",
]